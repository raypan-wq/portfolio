---
import {
  FaBrandsGithub,
  FaBrandsLinkedin,
} from "solid-icons/fa";
import { SiGmail } from "solid-icons/si";
import type { LinkIconProps } from "./LinkIcon.astro";
import LinkIcon from "./LinkIcon.astro";

const base = import.meta.env.BASE_URL;

const navItemProps = [
  {
    title: "Home",
    href: '/',
  },
  {
    title: "Experience",
    href: `/experience`,
  },
  {
    title: "Blog",
    href: `/blog`,
  },
  {
    title: "Resume",
    href: `/rui_pan_resume.pdf`,
  },
];

const socialLinkClassName =
  "h-6 w-6 opacity-40 hover:opacity-80 transition-opacity";
const socialLinkProps: LinkIconProps[] = [
  {
    Icon: FaBrandsGithub,
    href: "https://github.com/raypan-wq",
    ariaLabel: "GitHub",
    className: socialLinkClassName,
  },
  {
    Icon: FaBrandsLinkedin,
    href: "https://www.linkedin.com/in/ray-pan-65a964133/",
    ariaLabel: "LinkedIn",
    className: socialLinkClassName,
  },
  // {
  //   Icon: FaBrandsMedium,
  //   href: "https://medium.com/@w.xy020203",
  //   ariaLabel: "Medium",
  //   className: socialLinkClassName,
  // },
  {
    Icon: SiGmail,
    href: "mailto:raypan.work23@gmail.com",
    ariaLabel: "Email",
    className: socialLinkClassName,
  },
];

const currentPath = Astro.url.pathname;
const isActive = (href: string) => {
  // Remove base from current path for comparison
  const normalizedPath = currentPath.replace(base.slice(0, -1), '') || '/';
  const normalizedHref = href.replace(base.slice(0, -1), '') || '/';
  return normalizedHref === "/" ? normalizedPath === "/" : normalizedPath.startsWith(normalizedHref);
};

---

<header
  class="w-full flex flex-col sm:flex-row gap-6 justify-between items-center"
>
  <nav
    class="w-fit flex gap-2 lg:gap-6 bg-neutral-50 rounded-full items-center p-2 shadow-md hover:shadow-lg transition-shadow"
  >
    {
      navItemProps.map((props) => (
        <a
          href={props.href}
          class="relative px-2 sm:px-3 group"
          data-astro-prefetch="load"
        >
          <span class="text-md text-muted-foreground group-hover:text-foreground transition-colors duration-300">
            {props.title}
          </span>
          {isActive(props.href) ? (
            <div
              transition:name="nav-underline"
              class="border-b-2 group-hover:border-muted-foreground transition-colors"
            />
          ) : (
            <div class="border-b-2 border-transparent" />
          )}
        </a>
      ))
    }
  </nav>

  <div class="flex gap-6">
    {socialLinkProps.map((props) => <LinkIcon {...props} />)}
  </div>
</header>

<script>
  // This runs in the browser
  const currentPath = window.location.pathname;
  console.log(`Current path: ${currentPath}`);
  
  // You can add more debugging logic here
  document.querySelectorAll('nav a').forEach(link => {
    const href = link.getAttribute('href');
    if (href) {
      console.log(`Link href: ${href}, is active: ${href === currentPath || currentPath.startsWith(href)}`);
    }
  });
</script>
